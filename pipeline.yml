resources:
  - name: goci-exampleGithubRepo
    type: GitRepo
    configuration:
      gitProvider: jefferyfryGithub
      path: jefferyfry/goci-example
  - name: staging_build
    type: BuildInfo
    configuration:
      sourceArtifactory: PartnershipArtifactory
      buildName: staging_build
      buildNumber: 1
  - name: release_build
    type: BuildInfo
    configuration:
      sourceArtifactory: PartnershipArtifactory
      buildName: release_build
      buildNumber: 1
pipelines:
  - name: goci_example_jfrog
    steps:
      - name: compile
        type: Bash
        configuration:
          runtime:
            type: image
            image:
              auto:
                language: go
                versions:
                  - "1.14.2"
        execution:
          onExecute:
            - sh 'go build'
      - name: unit_tests
        type: Bash
        configuration:
          inputSteps:
            - name: compile
          runtime:
            type: image
            image:
              auto:
                language: go
                versions:
                  - "1.14.2"
        execution:
          onExecute:
            - sh 'go test ./... -run Unit'
      - name: docker_build
        type: DockerBuild
        configuration:
          affinityGroup: dockerGroup
          dockerFileLocation: .
          dockerFileName: Dockerfile
          dockerImageName: 'partnership-public-images.jfrog.io/jenkins/staging/goci-example:'
          dockerImageTag: ${run_number}
          inputResources:
            - name: goci-exampleGithubRepo
          integrations:
            - name: PartnershipArtifactory
      - name: docker_push_staging
        type: DockerPush
        configuration:
          affinityGroup: dockerGroup
          targetRepository: partnership-public-images.jfrog.io
          integrations:
            - name: PartnershipArtifactory
          inputSteps:
            - name: docker_build
      - name: publish_build_info
        type: PublishBuildInfo
        configuration:
          inputSteps:
            - name: docker_push_staging
          outputResources:
            - name: staging_build
      - name: deploy_staging
        type: HelmDeploy
        configuration:
          flags: --set image.tag="${run_number}"
          releaseName: goci-example
          chartPath: chart/goci-example
          integrations:
            - name: stagingGKE
          inputResources:
            - name: goci-exampleGithubRepo
      - name: wait_for_server
        type: Bash
        configuration:
          inputSteps:
            - name: deploy_staging
          runtime:
            type: image
            image:
              auto:
                language: go
                versions:
                  - "1.14.2"
        execution:
          onExecute:
            - sh 'timeout 30 bash -c 'while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' http://goci-example.35.193.183.84.xip.io)" != "200" ]]; do sleep 5; done' || false'
      - name: staging_test
        type: Bash
        configuration:
          inputSteps:
            - name: wait_for_server
          runtime:
            type: image
            image:
              auto:
                language: go
                versions:
                  - "1.14.2"
        execution:
          onExecute:
            - sh 'go test ./... -run Staging'
#      - name: promote_release
#        type: PromoteBuild
#        configuration:
#          targetRepository: partnership-public-images.jfrog.io
#          inputResources:
#            - staging_build
#          outputResources:
#            - release_build