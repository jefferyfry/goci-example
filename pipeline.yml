resources:
  - name: gociexampleGithubRepo
    type: GitRepo
    configuration:
      gitProvider: jefferyfryGithub
      path: jefferyfry/goci-example
  - name: jenkinsBuildInfo
    type: BuildInfo
    configuration:
      sourceArtifactory: PartnershipArtifactory
      buildName: gociexample_build
      buildNumber: int_jenkins_openshiftk8s_com_buildNumber
      externalCI: jenkins_openshiftk8s_com
  - name: stagingBuildInfo
    type: BuildInfo
    configuration:
      sourceArtifactory: PartnershipArtifactory
      buildName: gociexample_build
      buildNumber: 1
  - name: releaseBuildInfo
    type: BuildInfo
    configuration:
      sourceArtifactory: PartnershipArtifactory
      buildName: gociexample_build
      buildNumber: 1
pipelines:
  - name: goci_example_jfrog
    steps:
#      - name: xray_scan_staging_build
#        type: XrayScan
#        configuration:
#          inputResources:
#            - name: stagingBuildInfo
#              trigger: true
      - name: start_from_jenkins
        type: Bash
        configuration:
          inputResources:
            - name: jenkinsBuildInfo
        execution:
          onExecute:
            - echo 'Jenkins job triggered Pipelines'
      - name: deploy_staging
        type: Bash
        configuration:
          inputSteps:
              - name: start_from_jenkins
          integrations:
            - name: stagingGKE
        execution:
          onExecute:
            - sh 'helm install --set image.tag=${run_number} --name goci-example --namespace staging ./chart/goci-example/'
      - name: wait_for_server
        type: Bash
        configuration:
          inputSteps:
            - name: deploy_staging
          runtime:
            type: image
            image:
              auto:
                language: go
                versions:
                  - "1.14.2"
        execution:
          onExecute:
            - sh 'timeout 30 bash -c 'while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' http://goci-example.35.193.183.84.xip.io)" != "200" ]]; do sleep 5; done' || false'
      - name: staging_test
        type: Bash
        configuration:
          inputSteps:
            - name: wait_for_server
          runtime:
            type: image
            image:
              auto:
                language: go
                versions:
                  - "1.14.2"
        execution:
          onExecute:
            - sh 'go test ./... -run Staging'
      - name: publish_staging_build
        type: PublishBuildInfo
        configuration:
          inputSteps:
            - name: staging_test
          outputResources:
            - name: stagingBuildInfo
      - name: promote_release
        type: PromoteBuild
        configuration:
          inputSteps:
            - name: publish_staging_build
          targetRepository: partnership-public-images.jfrog.io
          status: Released
          comment: Passed staging tests.
          inputResources:
            - name: stagingBuildInfo
              trigger: false
          outputResources:
            - name: releaseBuildInfo